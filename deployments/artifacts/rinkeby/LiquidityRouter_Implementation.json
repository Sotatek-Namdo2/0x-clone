{
  "address": "0x4153153cD7bf7EA865aFa4019F7641ca0B36456C",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "Swapped",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin0xB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "is0xBOut",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "targetToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "outputAmount",
          "type": "uint256"
        }
      ],
      "name": "getInputAmount",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "is0xBOut",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "targetToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inputAmount",
          "type": "uint256"
        }
      ],
      "name": "getOutputAmount",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "routerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "outTokenAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "swapExact0xBForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "inTokenAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokenFor0xB",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAddr",
          "type": "address"
        }
      ],
      "name": "updateUniswapV2Router",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xff25da76d4dc2e0d919f665c49f704e57e0cfdb80fb9277a25de0b6180c2f90a",
  "receipt": {
    "to": null,
    "from": "0x67616A06D0D20006fd7A0a46531C1Ca266A15EA6",
    "contractAddress": "0x4153153cD7bf7EA865aFa4019F7641ca0B36456C",
    "transactionIndex": 47,
    "gasUsed": "1165191",
    "logsBloom": "0x
    "blockHash": "0xf3d834ed90aed8fea4cec56993b98d8239251229659472f46d2fad79d56deaeb",
    "transactionHash": "0xff25da76d4dc2e0d919f665c49f704e57e0cfdb80fb9277a25de0b6180c2f90a",
    "logs": [],
    "blockNumber": 10405127,
    "cumulativeGasUsed": "11430716",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "f1ab5f70258e6499561fb160f9080406",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin0xB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"is0xBOut\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"}],\"name\":\"getInputAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"is0xBOut\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"}],\"name\":\"getOutputAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"routerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"outTokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExact0xBForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inTokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExactTokenFor0xB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddr\",\"type\":\"address\"}],\"name\":\"updateUniswapV2Router\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependencies/LiquidityRouter.sol\":\"LiquidityRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":150},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"contracts/dependencies/LiquidityRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"../interfaces/IJoeRouter02.sol\\\";\\nimport \\\"../interfaces/IJoeFactory.sol\\\";\\n\\ncontract LiquidityRouter is Initializable {\\n    // ----- Router Addresses -----\\n    IJoeRouter02 private uniswapV2Router;\\n    address public routerAddress;\\n    address public uniswapV2Pair;\\n\\n    // ----- Contract Storage -----\\n    address public admin0xB;\\n    address public token;\\n\\n    // ----- Constructor -----\\n    function initialize(address _router) public initializer {\\n        require(_router != address(0), \\\"ROUTER ZERO\\\");\\n        routerAddress = _router;\\n        uniswapV2Router = IJoeRouter02(_router);\\n        admin0xB = msg.sender;\\n    }\\n\\n    // ----- Event -----\\n    event Swapped(address tokenIn, uint256 amountIn, address tokenOut, uint256 amountOut);\\n\\n    // ----- Modifier (filter) -----\\n    modifier onlyAuthorities() {\\n        require(msg.sender == token || msg.sender == admin0xB, \\\"Access Denied!\\\");\\n        _;\\n    }\\n\\n    // ----- External READ functions -----\\n    function getOutputAmount(\\n        bool is0xBOut,\\n        address targetToken,\\n        uint256 inputAmount\\n    ) external view returns (uint256[] memory) {\\n        address[] memory path = getPath(targetToken, is0xBOut);\\n        return uniswapV2Router.getAmountsOut(inputAmount, path);\\n    }\\n\\n    function getInputAmount(\\n        bool is0xBOut,\\n        address targetToken,\\n        uint256 outputAmount\\n    ) external view returns (uint256[] memory) {\\n        address[] memory path = getPath(targetToken, is0xBOut);\\n        return uniswapV2Router.getAmountsIn(outputAmount, path);\\n    }\\n\\n    // ----- External WRITE functions -----\\n    function setToken(address _token) external onlyAuthorities {\\n        require(_token != address(0), \\\"NEW_TOKEN: zero addr\\\");\\n        token = _token;\\n        address _uniswapV2Pair;\\n        try IJoeFactory(uniswapV2Router.factory()).createPair(token, uniswapV2Router.WAVAX()) {\\n            _uniswapV2Pair = IJoeFactory(uniswapV2Router.factory()).getPair(token, uniswapV2Router.WAVAX());\\n        } catch {\\n            _uniswapV2Pair = IJoeFactory(uniswapV2Router.factory()).getPair(token, uniswapV2Router.WAVAX());\\n        }\\n        uniswapV2Pair = _uniswapV2Pair;\\n    }\\n\\n    function updateUniswapV2Router(address _newAddr) external onlyAuthorities {\\n        require(_newAddr != address(uniswapV2Router), \\\"TKN: The router already has that address\\\");\\n        routerAddress = _newAddr;\\n        uniswapV2Router = IJoeRouter02(_newAddr);\\n        address _uniswapV2Pair;\\n        try IJoeFactory(uniswapV2Router.factory()).createPair(token, uniswapV2Router.WAVAX()) {\\n            _uniswapV2Pair = IJoeFactory(uniswapV2Router.factory()).getPair(token, uniswapV2Router.WAVAX());\\n        } catch {\\n            _uniswapV2Pair = IJoeFactory(uniswapV2Router.factory()).getPair(token, uniswapV2Router.WAVAX());\\n        }\\n        uniswapV2Pair = _uniswapV2Pair;\\n    }\\n\\n    function swapExactTokenFor0xB(\\n        address inTokenAddr,\\n        address receiver,\\n        uint256 amountIn\\n    ) external onlyAuthorities {\\n        address[] memory path = getPath(inTokenAddr, true);\\n\\n        uint256[] memory result = uniswapV2Router.swapExactTokensForTokens(\\n            amountIn,\\n            0, // accept any amount of USDC\\n            path,\\n            receiver,\\n            block.timestamp\\n        );\\n\\n        emit Swapped(inTokenAddr, amountIn, token, result[result.length - 1]);\\n    }\\n\\n    function swapExact0xBForToken(\\n        address outTokenAddr,\\n        address receiver,\\n        uint256 amountIn\\n    ) external onlyAuthorities {\\n        address[] memory path = getPath(outTokenAddr, false);\\n        uint256[] memory amountOut = this.getOutputAmount(false, outTokenAddr, amountIn);\\n\\n        uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n            amountIn,\\n            0, // accept any amount\\n            path,\\n            receiver,\\n            block.timestamp\\n        );\\n\\n        emit Swapped(token, amountIn, outTokenAddr, amountOut[amountOut.length - 1]);\\n    }\\n\\n    // ----- Private/Internal Helpers -----\\n    function getPath(address target, bool is0xBOut) internal view returns (address[] memory) {\\n        if (target == uniswapV2Router.WAVAX()) {\\n            address[] memory result = new address[](2);\\n\\n            if (is0xBOut) {\\n                result[0] = target;\\n                result[1] = token;\\n            } else {\\n                result[0] = token;\\n                result[1] = target;\\n            }\\n            return result;\\n        }\\n\\n        address[] memory res = new address[](3);\\n        res[1] = uniswapV2Router.WAVAX();\\n        if (is0xBOut) {\\n            res[0] = target;\\n            res[2] = token;\\n        } else {\\n            res[0] = token;\\n            res[2] = target;\\n        }\\n        return res;\\n    }\\n}\\n\",\"keccak256\":\"0xa0b5af6b4f423cef4a1bba896cd4ac13f0dcbd6ac66efd2d5fd0ffba7c7bc3e2\",\"license\":\"MIT\"},\"contracts/interfaces/IJoeFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IJoeFactory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\\n\\n    function feeTo() external view returns (address);\\n\\n    function feeToSetter() external view returns (address);\\n\\n    function migrator() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n\\n    function allPairs(uint256) external view returns (address pair);\\n\\n    function allPairsLength() external view returns (uint256);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n\\n    function setFeeToSetter(address) external;\\n\\n    function setMigrator(address) external;\\n}\\n\",\"keccak256\":\"0x58a51a5068dd708ca7685b91dbe1f31317a181d9b999fb1ce9e39c990ad7e6bf\",\"license\":\"MIT\"},\"contracts/interfaces/IJoeRouter01.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IJoeRouter01 {\\n    function factory() external pure returns (address);\\n\\n    function WAVAX() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n\\n    function addLiquidityAVAX(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountAVAXMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        payable\\n        returns (\\n            uint256 amountToken,\\n            uint256 amountAVAX,\\n            uint256 liquidity\\n        );\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityAVAX(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountAVAXMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountToken, uint256 amountAVAX);\\n\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityAVAXWithPermit(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountAVAXMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountToken, uint256 amountAVAX);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactAVAXForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactAVAX(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForAVAX(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapAVAXForExactTokens(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function quote(\\n        uint256 amountA,\\n        uint256 reserveA,\\n        uint256 reserveB\\n    ) external pure returns (uint256 amountB);\\n\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        uint256 amountOut,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountIn);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(uint256 amountOut, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\",\"keccak256\":\"0x494c6da9a1a26cc8aa3602c02ae3323a7bdca265754ff0f9b4c936009223ed8a\",\"license\":\"MIT\"},\"contracts/interfaces/IJoeRouter02.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IJoeRouter01.sol\\\";\\n\\ninterface IJoeRouter02 is IJoeRouter01 {\\n    function removeLiquidityAVAXSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountAVAXMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountAVAX);\\n\\n    function removeLiquidityAVAXWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountAVAXMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountAVAX);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactAVAXForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForAVAXSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8cc97f1ca9b1bb99f16c8c35eab7b4dce3f15dd9bcb9d998be9719278aa0fd4c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611420806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80639caf326f116100715780639caf326f1461012c578063bd7476781461013f578063c4d66de81461015f578063eb8e0b3f14610172578063f5c1365314610185578063fc0c546a1461019857600080fd5b80630584aecf146100ae578063144fa6d7146100de5780633268cc56146100f357806349bd5a5e1461010657806365b8dbc014610119575b600080fd5b6003546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16100ec366004611138565b6101ab565b005b6001546100c1906001600160a01b031681565b6002546100c1906001600160a01b031681565b6100f1610127366004611138565b61073e565b6100f161013a366004611172565b61086b565b61015261014d366004611278565b610a5a565b6040516100d591906112e1565b6100f161016d366004611138565b610afe565b6100f1610180366004611172565b610c46565b610152610193366004611278565b610d75565b6004546100c1906001600160a01b031681565b6004546001600160a01b03163314806101ce57506003546001600160a01b031633145b6101f35760405162461bcd60e51b81526004016101ea90611325565b60405180910390fd5b6001600160a01b0381166102405760405162461bcd60e51b81526020600482015260146024820152732722abafaa27a5a2a71d103d32b9379030b2323960611b60448201526064016101ea565b600480546001600160a01b0319166001600160a01b03838116919091178255600080546040805163c45a015560e01b815290519294620100009092049093169263c45a01559281830192602092829003018186803b1580156102a157600080fd5b505afa1580156102b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d99190611155565b60048054600054604080516339d94ae160e11b815290516001600160a01b039586169563c9c6539695948116946201000090940416926373b295c292808201926020929091829003018186803b15801561033257600080fd5b505afa158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190611155565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381600087803b1580156103b257600080fd5b505af19250505080156103e2575060408051601f3d908101601f191682019092526103df91810190611155565b60015b61058257600060029054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561043457600080fd5b505afa158015610448573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046c9190611155565b60048054600054604080516339d94ae160e11b815290516001600160a01b039586169563e6a4390595948116946201000090940416926373b295c292808201926020929091829003018186803b1580156104c557600080fd5b505afa1580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd9190611155565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260440160206040518083038186803b15801561054357600080fd5b505afa158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b9190611155565b905061071b565b50600060029054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156105d157600080fd5b505afa1580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106099190611155565b60048054600054604080516339d94ae160e11b815290516001600160a01b039586169563e6a4390595948116946201000090940416926373b295c292808201926020929091829003018186803b15801561066257600080fd5b505afa158015610676573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069a9190611155565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260440160206040518083038186803b1580156106e057600080fd5b505afa1580156106f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107189190611155565b90505b600280546001600160a01b0319166001600160a01b039290921691909117905550565b6004546001600160a01b031633148061076157506003546001600160a01b031633145b61077d5760405162461bcd60e51b81526004016101ea90611325565b6000546001600160a01b03828116620100009092041614156107f25760405162461bcd60e51b815260206004820152602860248201527f544b4e3a2054686520726f7574657220616c7265616479206861732074686174604482015267206164647265737360c01b60648201526084016101ea565b600180546001600160a01b0319166001600160a01b038381169182179092556000805462010000600160b01b03191662010000928302178082556040805163c45a015560e01b815290519294939091049092169163c45a0155916004808301926020929190829003018186803b1580156102a157600080fd5b6004546001600160a01b031633148061088e57506003546001600160a01b031633145b6108aa5760405162461bcd60e51b81526004016101ea90611325565b60006108b7846000610dbc565b60405163f5c1365360e01b81526000600482018190526001600160a01b038716602483015260448201859052919250309063f5c136539060640160006040518083038186803b15801561090957600080fd5b505afa15801561091d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261094591908101906111b3565b60008054604051635c11d79560e01b81529293506201000090046001600160a01b031691635c11d795916109849187919087908a90429060040161136e565b600060405180830381600087803b15801561099e57600080fd5b505af11580156109b2573d6000803e3d6000fd5b505050507fdb587d878116df0bdd4fe154699aa2c5f439da001cc811dfd05d9f589fc5a8ee600460009054906101000a90046001600160a01b0316848784600186516109fe91906113aa565b81518110610a0e57610a0e6113cf565b6020026020010151604051610a4b94939291906001600160a01b039485168152602081019390935292166040820152606081019190915260800190565b60405180910390a15050505050565b60606000610a688486610dbc565b6000546040516307c0329d60e21b81529192506201000090046001600160a01b031690631f00ca7490610aa1908690859060040161134d565b60006040518083038186803b158015610ab957600080fd5b505afa158015610acd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610af591908101906111b3565b95945050505050565b600054610100900460ff16610b195760005460ff1615610b1d565b303b155b610b805760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101ea565b600054610100900460ff16158015610ba2576000805461ffff19166101011790555b6001600160a01b038216610be65760405162461bcd60e51b815260206004820152600b60248201526a524f55544552205a45524f60a81b60448201526064016101ea565b600180546001600160a01b0384166001600160a01b03199182168117909255600080546201000090930262010000600160b01b03199093169290921790915560038054909116331790558015610c42576000805461ff00191690555b5050565b6004546001600160a01b0316331480610c6957506003546001600160a01b031633145b610c855760405162461bcd60e51b81526004016101ea90611325565b6000610c92846001610dbc565b600080546040516338ed173960e01b81529293509091620100009091046001600160a01b0316906338ed173990610cd5908690859087908a90429060040161136e565b600060405180830381600087803b158015610cef57600080fd5b505af1158015610d03573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d2b91908101906111b3565b90507fdb587d878116df0bdd4fe154699aa2c5f439da001cc811dfd05d9f589fc5a8ee8584600460009054906101000a90046001600160a01b031684600186516109fe91906113aa565b60606000610d838486610dbc565b60005460405163d06ca61f60e01b81529192506201000090046001600160a01b03169063d06ca61f90610aa1908690859060040161134d565b6060600060029054906101000a90046001600160a01b03166001600160a01b03166373b295c26040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0c57600080fd5b505afa158015610e20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e449190611155565b6001600160a01b0316836001600160a01b03161415610f6c576040805160028082526060820183526000926020830190803683370190505090508215610eee578381600081518110610e9857610e986113cf565b6001600160a01b039283166020918202929092010152600454825191169082906001908110610ec957610ec96113cf565b60200260200101906001600160a01b031690816001600160a01b031681525050610f65565b60045481516001600160a01b03909116908290600090610f1057610f106113cf565b60200260200101906001600160a01b031690816001600160a01b0316815250508381600181518110610f4457610f446113cf565b60200260200101906001600160a01b031690816001600160a01b0316815250505b9050611132565b6040805160038082526080820190925260009160208201606080368337019050509050600060029054906101000a90046001600160a01b03166001600160a01b03166373b295c26040518163ffffffff1660e01b815260040160206040518083038186803b158015610fdd57600080fd5b505afa158015610ff1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110159190611155565b81600181518110611028576110286113cf565b60200260200101906001600160a01b031690816001600160a01b03168152505082156110b8578381600081518110611062576110626113cf565b6001600160a01b039283166020918202929092010152600454825191169082906002908110611093576110936113cf565b60200260200101906001600160a01b031690816001600160a01b03168152505061112f565b60045481516001600160a01b039091169082906000906110da576110da6113cf565b60200260200101906001600160a01b031690816001600160a01b031681525050838160028151811061110e5761110e6113cf565b60200260200101906001600160a01b031690816001600160a01b0316815250505b90505b92915050565b60006020828403121561114a57600080fd5b813561112f816113fb565b60006020828403121561116757600080fd5b815161112f816113fb565b60008060006060848603121561118757600080fd5b8335611192816113fb565b925060208401356111a2816113fb565b929592945050506040919091013590565b600060208083850312156111c657600080fd5b825167ffffffffffffffff808211156111de57600080fd5b818501915085601f8301126111f257600080fd5b815181811115611204576112046113e5565b8060051b604051601f19603f83011681018181108582111715611229576112296113e5565b604052828152858101935084860182860187018a101561124857600080fd5b600095505b8386101561126b57805185526001959095019493860193860161124d565b5098975050505050505050565b60008060006060848603121561128d57600080fd5b8335801515811461119257600080fd5b600081518084526020808501945080840160005b838110156112d65781516001600160a01b0316875295820195908201906001016112b1565b509495945050505050565b6020808252825182820181905260009190848201906040850190845b81811015611319578351835292840192918401916001016112fd565b50909695505050505050565b6020808252600e908201526d4163636573732044656e6965642160901b604082015260600190565b828152604060208201526000611366604083018461129d565b949350505050565b85815284602082015260a06040820152600061138d60a083018661129d565b6001600160a01b0394909416606083015250608001529392505050565b6000828210156113ca57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461141057600080fd5b5056fea164736f6c6343000807000a",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 598,
        "contract": "contracts/dependencies/LiquidityRouter.sol:LiquidityRouter",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 601,
        "contract": "contracts/dependencies/LiquidityRouter.sol:LiquidityRouter",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 5711,
        "contract": "contracts/dependencies/LiquidityRouter.sol:LiquidityRouter",
        "label": "uniswapV2Router",
        "offset": 2,
        "slot": "0",
        "type": "t_contract(IJoeRouter02)6673"
      },
      {
        "astId": 5713,
        "contract": "contracts/dependencies/LiquidityRouter.sol:LiquidityRouter",
        "label": "routerAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 5715,
        "contract": "contracts/dependencies/LiquidityRouter.sol:LiquidityRouter",
        "label": "uniswapV2Pair",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 5717,
        "contract": "contracts/dependencies/LiquidityRouter.sol:LiquidityRouter",
        "label": "admin0xB",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 5719,
        "contract": "contracts/dependencies/LiquidityRouter.sol:LiquidityRouter",
        "label": "token",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IJoeRouter02)6673": {
        "encoding": "inplace",
        "label": "contract IJoeRouter02",
        "numberOfBytes": "20"
      }
    }
  }
}